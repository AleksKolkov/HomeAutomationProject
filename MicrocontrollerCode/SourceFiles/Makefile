# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := BUILD
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Project name

PROJECT := DISCO-F746NG_home_automation


# Main source files

OBJECTS += Src/main.o
OBJECTS += Src/Log.o
OBJECTS += Src/ezxml.o
OBJECTS += Src/GregorianCalendar.o
OBJECTS += Src/real_time_clock.o
OBJECTS += Src/RoomConfiguration.o
OBJECTS += Src/RoomWidget.o
OBJECTS += Src/RoomWidgetParser.o
OBJECTS += Src/RoomWidgetWriter.o
OBJECTS += Src/SerialCommandParser.o
OBJECTS += Src/SerialCommandWriterReader.o
OBJECTS += Src/stm32f7xx_hal_msp.o
OBJECTS += Src/stm32f7xx_it.o
OBJECTS += Src/TemperatureDataLogger.o
OBJECTS += Src/Window_lights.o
OBJECTS += Src/Window_menu.o
OBJECTS += Src/Window_room_configuration.o
OBJECTS += Src/Window_settings_date.o
OBJECTS += Src/Window_settings_time.o
OBJECTS += Src/Window_settings.o
OBJECTS += Src/Window_temperature.o

# STM32F7xx HAL drivers

OBJECTS += Driver/STM32F7xx_HAL_Driver/stm32f7xx_hal_gpio.o


INCLUDE_PATHS += -I../Inc/.
INCLUDE_PATHS += -I../BSP/STM32746G-Discovery/Inc
INCLUDE_PATHS += -I../Components/Common
INCLUDE_PATHS += -I../Components/ft5336
INCLUDE_PATHS += -I../Components/n25q128a
INCLUDE_PATHS += -I../Components/ov9655
INCLUDE_PATHS += -I../Components/rk043fn48h
INCLUDE_PATHS += -I../Components/wm8994
INCLUDE_PATHS += -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include
INCLUDE_PATHS += -I../Drivers/CMSIS/Include
INCLUDE_PATHS += -I../Drivers/STM32F7xx_HAL_Driver/Inc
INCLUDE_PATHS += -I../Middlewares/FatFs/src/
INCLUDE_PATHS += -I../Middlewares/FatFs/src/drivers/
INCLUDE_PATHS += -I../Middlewares/STemWin/inc
INCLUDE_PATHS += -I../Middlewares/STemWin/Config/inc

LIBRARY_PATHS := -L../Middlewares/STemWin/
LIBRARIES := -llib_STemWin532_CM7_GCC
LINKER_SCRIPT ?= STM32F746xG.ld

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = 'arm-none-eabi-gcc' '-x' 'assembler-with-cpp' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m7' '-mthumb' '-mfpu=fpv5-sp-d16' '-mfloat-abi=softfp'
CC      = 'arm-none-eabi-gcc' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m7' '-mthumb' '-mfpu=fpv5-sp-d16' '-mfloat-abi=softfp'
CPP     = 'arm-none-eabi-g++' '-fno-rtti' '-Wvla' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m7' '-mthumb' '-mfpu=fpv5-sp-d16' '-mfloat-abi=softfp'
LD      = 'arm-none-eabi-gcc'
ELF2BIN = 'arm-none-eabi-objcopy'
PREPROC = 'arm-none-eabi-cpp' '-E' '-P' '-Wl,--gc-sections' '-Wl,--wrap,main' '-Wl,--wrap,_malloc_r' '-Wl,--wrap,_free_r' '-Wl,--wrap,_realloc_r' '-Wl,--wrap,_memalign_r' '-Wl,--wrap,_calloc_r' '-Wl,--wrap,exit' '-Wl,--wrap,atexit' '-Wl,-n' '-mcpu=cortex-m7' '-mthumb' '-mfpu=fpv5-sp-d16' '-mfloat-abi=softfp'


C_FLAGS += -DUSE_HAL_DRIVER
C_FLAGS += -DSTM32F746xx
C_FLAGS += -DUSE_STM32746G_DISCOVERY
#C_FLAGS += mbed_config.h


LD_FLAGS :=-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m7 -mthumb -mfpu=fpv5-sp-d16 -mfloat-abi=softfp 
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys -lmbed -Wl,--end-group

# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: $(PROJECT).bin $(PROJECT).hex size


.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  


.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld 
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter-out %.o, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@
	+@echo "===== bin file ready to flash: $(OBJDIR)/$@ =====" 

$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@


# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
